#!/usr/bin/env python3

''' Create the kernel-drivers.yaml file from kernel-drivers.dist,
including only drivers wich are available on this bix.
'''

import glob
import os
import subprocess
import sys
import time
import yaml

import config


def here(path):
    ' Return path added to current dir for __file__. '
    return os.path.join(os.path.dirname(os.path.abspath(__file__)), path)


def load_drivers(path):
    ''' Load config files into a dict keyed by id. '''

    with open(path) as f:
        cf = yaml.load(f.read())
    return cf['drivers']


def check_driver(driver):
    ''' Check if given kernel driver ecists on this box.'''

    with open('/dev/null', 'w') as f:
        try:
            subprocess.check_output([config.MODINFO, driver], stderr=f);
        except subprocess.CalledProcessError:
            return False
        else:
            return True


def print_driver(key, driver):
    ''' Print driver yaml data. '''

    print('\n    %s:' % key)
    for key, value in driver.items():
        if isinstance(value, list):
            print("    %-20s%s" %
                  (key + ":", (",\n"  + (24 * ' ')).join(value)))
        else:
            print("        %-20s%s" % (key + ':', value))


def main():
    if len(sys.argv) == 2:
        path = sys.argv[1]
    elif len(sys.argv) == 1:
        path = "kernel-drivers.dist"
    else:
        print("Usage: lirc-kerneldrivers [itemplate file]")
        sys.exit(1)

    drivers = load_drivers(path)
    print("#")
    print("# Created by lirc-kerneldrivers at " + time.ctime())
    print("#")
    print("drivers:")
    for id_, driver in drivers.items():
        # import pdb; pdb.set_trace()
        if check_driver(id_):
            print_driver(id_, driver)

main()


# vim: set expandtab ts=4 sw=4:
