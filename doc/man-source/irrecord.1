.TH IRRECORD "1" "Last change: Aug 2015" "irrecord @version@" "User Commands"
.SH NAME
.P
\fBirrecord\fR - IR-codes recording tool for usage with LIRC
.SH SYNOPSIS
.P
\fBirrecord\fR [\fI-f\fR] [\fI-n\fR] [\fI-H driver\fR] [\fI-d device\fR] [\fIfile\fR]
.P
\fBirrecord\fR -a <\fIfile\fR>
.P
\fBirrecord\fR -l
.P
\fBirrecord\fR \--help | --version

.SH DESCRIPTION
This program will record the signals from your remote control and create
a config file for lircd. A proper config file for lircd is maybe the
most vital part of this package, so you should invest some time to
create a working config file. Although a good deal of effort is put in
this program it is often not possible to automatically recognize all
features of a remote control.
.P
If the program fails to recognize the protocol of the remote control you
should use the \-\-force option to at least create a config file in raw mode.
.P
If  \fIfile\fR is not specified it defaults to "irrecord.conf"
.P
If \fIfile\fR already exists and contains a valid config irrecord will use the
protocol description found there and will only try to record the
buttons. This is very useful if you want to learn a remote where config
files of the same brand are already available. Of course this will only
work if the remotes use the same protocol but it's worth a try.
.P
The irdb-get(1) tool can be used to find common protocols template files
using the command
.IP
$ irdb-get find generic
.P
The tool can also download these files.
.SH OPTIONS
.TP
\fB\-a\fR \fB\-\-analyse\fR
Analyse a raw_codes config file, trying to convert it to a
regular configuration.
.TP
\fB\-u\fR \fB\-\-update\fR
Add new buttons to an existing config file. No protocol information is
updated.
.TP
\fB\-f\fR \fB\-\-force\fR
Force raw mode. Use this if recording fails otherwise. This
creates a raw codes configuration file which can be used as-is
or converted using the -a option.
.TP
\fB\-n\fR \fB\-\-disable\-namespace\fR
Disable namespace checks.
.TP
\fB\-l\fR \fB\-\-list\-namespace\fR
List valid button names.
.TP
\fB\-H\fR \fB\-\-driver\fR=\fIdriver\fR
Use given driver. -H help lists available drivers.
.TP
\fB\-d\fR \fB\-\-device\fR=\fIdevice\fR
Read from given device.
.TP
\fB\-D\fR \fB\-\-loglevel\fR=\fIlevel\fR
Determine the amount of logging information. [level] can be a symbolic
syslog level: 'error','warning, 'info', 'notice' or  'debug'. lirc
also defines three additional levels 'trace', 'trace1' and 'trace2' which
gives even more messages ('trace2' bringing the most). However, in the
log these messages are marked as 'debug'.
The level can also be an integer in the range 3 (almost no messages) to
10.
.TP
\fB\-h\fR \fB\-\-help\fR
Display this message.
.TP
\fB\-v\fR \fB\-\-version\fR
Display version.
.SH "DRIVER LOAD PATH"
Drivers are loaded dynamically. This is done from a traditional *ux
\':\'\-separated path where each component in the path is searched (leading
part first, trailing last).
.P
The path used for this is determined by (falling
priority):
.IP \- 2
The --plugindir option.
.IP \- 2
The 'plugindir' entry in  the [lircd] section of the lirc_options.conf file.
.IP \- 2
The environment variable LIRC_PLUGINDIR.
.IP \- 2
A hardcoded default (usually /usr/lib[64]/lirc/plugins).


.SH FILES
.TP 4
.B /etc/lirc/lirc_options.conf
The options file. irrecord mostly handles the values under the [irrecord]
section, but some values such as debug and plugindir are inherited from
the [lircd] section.
.IP \- 4
The location of this file can be changed using the -O/--options-file
command-line option or using the environment variable LIRC_OPTIONS_PATH.
The values here are used as defaults for any option not present on
command line.

.TP 4
.B ~/.cache/irrecord.log
Debug output. Setting the XDG_CACHE_HOME environment variable relocates this
file to $XDG_CACHE_HOME/irrecord.log

.SH "SEE ALSO"
https://sourceforge.net/p/lirc-remotes/wiki
.br
irdb-get(1)
